##################### Grafana Configuration #####################
# {{ ansible_managed }}

app_mode = production
#instance_name = ${HOSTNAME}


#################################### Paths ####################################
[paths]
data = /data/grafana
#logs = /var/log/grafana
#plugins = /var/lib/grafana/plugins


#################################### Server ####################################
[server]
protocol = http
http_addr = 127.0.0.1
http_port = 3000
domain = grafana.home.spogliani.net
enforce_domain = true
root_url = https://grafana.home.spogliani.net
#static_root_path = public
#enable_gzip = false

# Log web requests
;router_logging = false


#################################### Database ####################################
[database]
type = sqlite3


#################################### Session ####################################
[session]
#provider = file
#provider_config = sessions
#cookie_name = grafana_sess
cookie_secure = true
#session_life_time = 86400


#################################### Data proxy ###########################
[dataproxy]
#logging = false


#################################### Analytics ####################################
[analytics]
reporting_enabled = false
#check_for_updates = true
#google_analytics_ua_id =


#################################### Security ####################################
[security]
admin_user = {{ vault_grafana_admin_user }}
admin_password = {{ vault_grafana_admin_password }}
secret_key = {{ vault_grafana_secret_key }}
;disable_gravatar = false

# Auto-login remember days
#login_remember_days = 7
#cookie_username = grafana_user
#cookie_remember_name = grafana_remember

# data source proxy whitelist (ip_or_domain:port separated by spaces)
#data_source_proxy_whitelist =

[snapshots]
external_enabled = false
;external_snapshot_url = https://snapshots-origin.raintank.io
;external_snapshot_name = Publish to snapshot.raintank.io
;snapshot_remove_expired = true
;snapshot_TTL_days = 90


#################################### Users ####################################
[users]
allow_sign_up = false
allow_org_create = false
;auto_assign_org = true
;auto_assign_org_role = Viewer
;login_hint = email or username
;default_theme = dark

[auth]
;disable_login_form = false
;disable_signout_menu = false

#################################### Anonymous Auth ##########################
[auth.anonymous]
;enabled = false
;org_name = Main Org.
;org_role = Viewer

#################################### Github Auth ##########################
[auth.github]
;enabled = false
;allow_sign_up = true
;client_id = some_id
;client_secret = some_secret
;scopes = user:email,read:org
;auth_url = https://github.com/login/oauth/authorize
;token_url = https://github.com/login/oauth/access_token
;api_url = https://api.github.com/user
;team_ids =
;allowed_organizations =

#################################### Google Auth ##########################
[auth.google]
;enabled = false
;allow_sign_up = true
;client_id = some_client_id
;client_secret = some_client_secret
;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
;auth_url = https://accounts.google.com/o/oauth2/auth
;token_url = https://accounts.google.com/o/oauth2/token
;api_url = https://www.googleapis.com/oauth2/v1/userinfo
;allowed_domains =

#################################### Generic OAuth ##########################
[auth.generic_oauth]
;enabled = false
;name = OAuth
;allow_sign_up = true
;client_id = some_id
;client_secret = some_secret
;scopes = user:email,read:org
;auth_url = https://foo.bar/login/oauth/authorize
;token_url = https://foo.bar/login/oauth/access_token
;api_url = https://foo.bar/user
;team_ids =
;allowed_organizations =

#################################### Grafana.com Auth ####################
[auth.grafana_com]
;enabled = false
;allow_sign_up = true
;client_id = some_id
;client_secret = some_secret
;scopes = user:email
;allowed_organizations =

#################################### Auth Proxy ##########################
[auth.proxy]
;enabled = false
;header_name = X-WEBAUTH-USER
;header_property = username
;auto_sign_up = true
;ldap_sync_ttl = 60
;whitelist = 192.168.1.1, 192.168.2.1

#################################### Basic Auth ##########################
[auth.basic]
;enabled = true

#################################### Auth LDAP ##########################
[auth.ldap]
;enabled = false
;config_file = /etc/grafana/ldap.toml
;allow_sign_up = true


#################################### SMTP / Emailing ##########################
[smtp]
;enabled = false
;host = localhost:25
;user =
# If the password contains # or ; you have to wrap it with trippel quotes. Ex """#password;"""
;password =
;cert_file =
;key_file =
;skip_verify = false
;from_address = grafana@spogliani.net
;from_name = Grafana
# EHLO identity in SMTP dialog (defaults to instance_name)
;ehlo_identity = dashboard.example.com

[emails]
;welcome_email_on_sign_up = false


#################################### Logging ##########################
[log]
;mode = console file
;level = info
;filters =

[log.console]
;level =
;format = console

[log.file]
;level =
;format = text
;log_rotate = true
;max_lines = 1000000
;max_size_shift = 28
;daily_rotate = true
;max_days = 7

[log.syslog]
;level =
;format = text

# Syslog network type and address. This can be udp, tcp, or unix. If left blank, the default unix endpoints will be used.
;network =
;address =

;facility =
;tag =


#################################### AMQP Event Publisher ##########################
[event_publisher]
;enabled = false
;rabbitmq_url = amqp://localhost/
;exchange = grafana_events


;#################################### Dashboard JSON files ##########################
[dashboards.json]
;enabled = false
path = /data/grafana/dashboards


#################################### Alerting ############################
[alerting]
enabled = true
execute_alerts = false


#################################### Internal Grafana Metrics ##########################
# Metrics available at HTTP API Url /api/metrics
[metrics]
enabled = true
;interval_seconds  = 10

# Send internal metrics to Graphite
[metrics.graphite]
# Enable by setting the address setting (ex localhost:2003)
;address =
;prefix = prod.grafana.%(instance_name)s.

#################################### Distributed tracing ############
[tracing.jaeger]
# Enable by setting the address sending traces to jaeger (ex localhost:6831)
;address = localhost:6831
# Tag that will always be included in when creating new spans. ex (tag1:value1,tag2:value2)
;always_included_tag = tag1:value1
# Type specifies the type of the sampler: const, probabilistic, rateLimiting, or remote
;sampler_type = const
# jaeger samplerconfig param
# for "const" sampler, 0 or 1 for always false/true respectively
# for "probabilistic" sampler, a probability between 0 and 1
# for "rateLimiting" sampler, the number of spans per second
# for "remote" sampler, param is the same as for "probabilistic"
# and indicates the initial sampling rate before the actual one
# is received from the mothership
;sampler_param = 1


#################################### Grafana.com integration  ##########################
# Url used to to import dashboards directly from Grafana.com
[grafana_com]
;url = https://grafana.com


#################################### External image storage ##########################
[external_image_storage]
# Used for uploading images to public servers so they can be included in slack/email messages.
# you can choose between (s3, webdav, gcs)
;provider =

[external_image_storage.s3]
;bucket =
;region =
;path =
;access_key =
;secret_key =

[external_image_storage.webdav]
;url =
;public_url =
;username =
;password =

[external_image_storage.gcs]
;key_file =
;bucket =
